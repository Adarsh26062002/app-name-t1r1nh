# Development stage Dockerfile for test framework
# Base image: node:18-alpine (as specified in dependencies)
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install development essentials and tools
RUN apk update && \
    apk add --no-cache \
    # Build essentials
    python3 \
    make \
    g++ \
    # Development tools
    git \
    vim \
    curl \
    # Required for node-gyp
    python3 \
    # Required for file watching
    inotify-tools \
    # Required for timezone support
    tzdata \
    # Clean up
    && rm -rf /var/cache/apk/*

# Copy package files first for better caching
COPY package*.json ./

# Install all dependencies including devDependencies
# npm v9.6.7 is included in node:18-alpine
RUN npm install

# Install global development tools
RUN npm install -g \
    nodemon@2.0.22 \
    typescript@4.9.5 \
    ts-node@10.9.1

# Create non-root user for security
RUN addgroup -S appgroup && \
    adduser -S appuser -G appgroup

# Set development environment variables
ENV NODE_ENV=development \
    NODE_OPTIONS="--max-old-space-size=4096" \
    DEBUG="app:*" \
    TS_NODE_PROJECT="tsconfig.json" \
    NODE_ICU_DATA=/app/node_modules/full-icu \
    TZ=UTC

# Copy the rest of the application code
COPY . .

# Set appropriate permissions for development
RUN chown -R appuser:appgroup /app && \
    chmod -R 755 /app/src && \
    chmod -R 755 /app/tests && \
    chmod -R 755 /app/node_modules

# Create directories for logs and temp files
RUN mkdir -p /app/logs /app/temp && \
    chown -R appuser:appgroup /app/logs /app/temp && \
    chmod 755 /app/logs /app/temp

# Expose ports for application and debugging
# Port 3000: Main application
# Port 9229: Node.js debugging
EXPOSE 3000 9229

# Switch to non-root user
USER appuser

# Configure nodemon for TypeScript files
COPY nodemon.json .

# Start application with nodemon for hot reloading and debugging enabled
CMD ["nodemon", "--inspect=0.0.0.0:9229", "-r", "ts-node/register", "src/index.ts"]

# Development-specific health check with increased intervals
HEALTHCHECK --interval=60s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1