# Docker Compose file for development environment
# Version: 3.8 (as specified in external dependencies)
version: '3.8'

services:
  # Main application service for test framework development
  # Implements requirements from system_architecture.deployment_architecture
  app:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.dev
    ports:
      # Main application port
      - "3000:3000"
      # Node.js debugging port
      - "9229:9229"
    volumes:
      # Hot-reloading for source code
      - ../../src/backend:/app/src
      # Preserve node_modules from container
      - ../../node_modules:/app/node_modules
    environment:
      # Development environment configuration
      NODE_ENV: development
      DEBUG: app:*
      # Database configuration (from system_architecture.component_configuration)
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: devuser
      DB_PASSWORD: devpass
      DB_NAME: devdb
      DB_POOL_SIZE: 10
      DB_IDLE_TIMEOUT: 10000
      # API configuration
      API_TIMEOUT: 5000
      API_MAX_RETRIES: 3
      # Node.js configuration for development
      NODE_OPTIONS: --max-old-space-size=4096
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL database service for development
  # Uses postgres:13-alpine as specified in external dependencies
  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: devdb
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d devdb"]
      interval: 10s
      timeout: 5s
      retries: 5

# Volume configuration for persistent data
volumes:
  db_data:
    driver: local

# Network configuration for service communication
networks:
  default:
    driver: bridge